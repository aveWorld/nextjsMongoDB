{"ast":null,"code":"import nextConnect from 'next-connect';\nimport middleware from '../../middleware/db';\nimport next from 'next';\nconst handler = nextConnect();\nhandler.use(middleware);\nhandler.get(async (req, res) => {\n  let doc = await req.db.collection('participants').find({}).toArray((err, docs) => {\n    if (err) throw err;\n    console.log('found the following records');\n    console.log(docs);\n  });\n  console.log(doc);\n  res.json(doc);\n});\nhandler.post(async (req, res) => {\n  let data = req.body;\n  data = JSON.parse(data);\n  await req.db.collection('participants').insertOne({\n    \"email\": data\n  });\n  res.json(data);\n});\nexport default handler;","map":{"version":3,"sources":["C:/Users/Michael Schumacher/Desktop/next-mysql/pages/api/api.js"],"names":["nextConnect","middleware","next","handler","use","get","req","res","doc","db","collection","find","toArray","err","docs","console","log","json","post","data","body","JSON","parse","insertOne"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,cAAxB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,MAAMC,OAAO,GAAGH,WAAW,EAA3B;AAEAG,OAAO,CAACC,GAAR,CAAYH,UAAZ;AAEAE,OAAO,CAACE,GAAR,CAAY,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAC5B,MAAIC,GAAG,GAAG,MAAMF,GAAG,CAACG,EAAJ,CAAOC,UAAP,CAAkB,cAAlB,EAAkCC,IAAlC,CAAuC,EAAvC,EAA2CC,OAA3C,CAAmD,CAACC,GAAD,EAAKC,IAAL,KAAc;AAC7E,QAAGD,GAAH,EAAQ,MAAMA,GAAN;AACRE,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACH,GAJe,CAAhB;AAKAC,EAAAA,OAAO,CAACC,GAAR,CAAYR,GAAZ;AACAD,EAAAA,GAAG,CAACU,IAAJ,CAAST,GAAT;AACH,CARD;AAUAL,OAAO,CAACe,IAAR,CAAa,OAAOZ,GAAP,EAAYC,GAAZ,KAAoB;AAC7B,MAAIY,IAAI,GAAGb,GAAG,CAACc,IAAf;AACAD,EAAAA,IAAI,GAAGE,IAAI,CAACC,KAAL,CAAWH,IAAX,CAAP;AACA,QAAMb,GAAG,CAACG,EAAJ,CAAOC,UAAP,CAAkB,cAAlB,EAAkCa,SAAlC,CAA4C;AAAC,aAAUJ;AAAX,GAA5C,CAAN;AAEDZ,EAAAA,GAAG,CAACU,IAAJ,CAASE,IAAT;AACF,CAND;AAQA,eAAehB,OAAf","sourcesContent":["import nextConnect from 'next-connect';\r\nimport middleware from '../../middleware/db';\r\nimport next from 'next';\r\n\r\nconst handler = nextConnect();\r\n\r\nhandler.use(middleware);\r\n\r\nhandler.get(async (req, res) => {\r\n    let doc = await req.db.collection('participants').find({}).toArray((err,docs) => {\r\n        if(err) throw err;\r\n        console.log('found the following records')\r\n        console.log(docs)\r\n    });\r\n    console.log(doc);\r\n    res.json(doc);\r\n});\r\n\r\nhandler.post(async (req, res) => {\r\n    let data = req.body;\r\n    data = JSON.parse(data);\r\n    await req.db.collection('participants').insertOne({\"email\" : data})\r\n\r\n   res.json(data)\r\n})\r\n\r\nexport default handler;"]},"metadata":{},"sourceType":"module"}